version: "3.9"
services:
  db:
    container_name: db
    image: mysql
    command: --default-authentication-plugin=mysql_native_password
    ports:
      - 3306:3306
    volumes:
      - ./tmp/db:/var/lib/mysql
    environment:
      MYSQL_ROOT_PASSWORD: ${DB_PASSWORD}
      MYSQL_DATABASE: ${DB_NAME}
      MYSQL_PASSWORD: ${DB_PASSWORD}

  redis:
    container_name: redis
    image: redis:alpine
    volumes:
      - ./tmp/redis:/data
    ports:
      - 6379:6379

  rabbitmq:
    container_name: rabbitmq
    image: rabbitmq:3-management-alpine
    ports:
      - 5672:5672
      - 15672:15672
    volumes:
      - ./tmp/rmq:/var/lib/rabbitmq/
    environment:
      RABBITMQ_DEFAULT_USER: ${RABBITMQ_USER}
      RABBITMQ_DEFAULT_PASS: ${RABBITMQ_PASS}

  elasticsearch:
    container_name: elasticsearch
    image: elasticsearch:7.17.1
    ports:
      - 9200:9200
    volumes:
      - ./tmp/elasticsearch:/usr/share/elasticsearch/data
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false

  api:
    container_name: api
    build:
      context: .
      dockerfile: Dockerfile.api
    entrypoint: ./entrypoint.sh
    command: bash -c "rm -f tmp/pids/server.pid && bundle exec rails s -p 3000 -b '0.0.0.0'"
    volumes:
      - .:/instabug
    ports:
      - "3000:3000"
    restart: on-failure
    environment:
      DB_URL: ${DB_CONNECTION_STRING}
      DB_URL_TEST: ${DB_CONNECTION_STRING_TEST}
      RABBITMQ_USER: ${RABBITMQ_USER}
      RABBITMQ_PASS: ${RABBITMQ_PASS}
      RABBITMQ_HOST: rabbitmq
      REDIS: redis
      ELASTICSEARCH_HOST: elasticsearch
      RAILS_ENV: ${ENVIRONMENT}
    depends_on:
      - db
      - rabbitmq
      - elasticsearch

  workers:
    container_name: rabbitmq.consumers
    build:
      context: .
      dockerfile: Dockerfile.workers
    entrypoint: ./entrypoint.sh
    command: bundle exec rake sneakers:run
    volumes:
      - .:/instabug
    restart: on-failure
    environment:
      DB_URL: ${DB_CONNECTION_STRING}
      RABBITMQ_USER: ${RABBITMQ_USER}
      RABBITMQ_PASS: ${RABBITMQ_PASS}
      RABBITMQ_HOST: rabbitmq
      REDIS: redis
      ELASTICSEARCH_HOST: elasticsearch
      RAKE_ENV: ${ENVIRONMENT}
      WORKER: true
    depends_on:
      - db
      - rabbitmq
      - elasticsearch
